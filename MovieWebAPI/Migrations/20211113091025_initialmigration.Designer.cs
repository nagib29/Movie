// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieWebAPI.Models;

namespace MovieWebAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211113091025_initialmigration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieWebAPI.Models.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActorName");

                    b.Property<string>("Address");

                    b.Property<string>("ContactInfo");

                    b.Property<int?>("MovieId");

                    b.Property<int?>("TvShowId");

                    b.HasKey("ActorId");

                    b.HasIndex("MovieId");

                    b.HasIndex("TvShowId");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("MovieWebAPI.Models.Director", b =>
                {
                    b.Property<int>("DirectorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DirectorName");

                    b.Property<int?>("MovieId");

                    b.Property<int?>("TvShowId");

                    b.HasKey("DirectorId");

                    b.HasIndex("MovieId");

                    b.HasIndex("TvShowId");

                    b.ToTable("Directors");
                });

            modelBuilder.Entity("MovieWebAPI.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MovieName");

                    b.Property<int>("ReleaseYear");

                    b.Property<string>("ShortDesc");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MovieWebAPI.Models.Producer", b =>
                {
                    b.Property<int>("ProducerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MovieId");

                    b.Property<string>("ProducerName");

                    b.Property<int?>("TvShowId");

                    b.HasKey("ProducerId");

                    b.HasIndex("MovieId");

                    b.HasIndex("TvShowId");

                    b.ToTable("Producers");
                });

            modelBuilder.Entity("MovieWebAPI.Models.TvShow", b =>
                {
                    b.Property<int>("TvShowId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReleaseYear");

                    b.Property<string>("ShortDesc");

                    b.Property<string>("TvShowName");

                    b.HasKey("TvShowId");

                    b.ToTable("TvShows");
                });

            modelBuilder.Entity("MovieWebAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FullName");

                    b.Property<int>("UserName");

                    b.Property<int>("userRole");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MovieWebAPI.Models.Actor", b =>
                {
                    b.HasOne("MovieWebAPI.Models.Movie")
                        .WithMany("actor")
                        .HasForeignKey("MovieId");

                    b.HasOne("MovieWebAPI.Models.TvShow")
                        .WithMany("actor")
                        .HasForeignKey("TvShowId");
                });

            modelBuilder.Entity("MovieWebAPI.Models.Director", b =>
                {
                    b.HasOne("MovieWebAPI.Models.Movie")
                        .WithMany("director")
                        .HasForeignKey("MovieId");

                    b.HasOne("MovieWebAPI.Models.TvShow")
                        .WithMany("director")
                        .HasForeignKey("TvShowId");
                });

            modelBuilder.Entity("MovieWebAPI.Models.Producer", b =>
                {
                    b.HasOne("MovieWebAPI.Models.Movie")
                        .WithMany("producer")
                        .HasForeignKey("MovieId");

                    b.HasOne("MovieWebAPI.Models.TvShow")
                        .WithMany("producer")
                        .HasForeignKey("TvShowId");
                });
#pragma warning restore 612, 618
        }
    }
}
